# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: machinetalk/protobuf/firmware.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from machinetalk.protobuf import nanopb_pb2 as machinetalk_dot_protobuf_dot_nanopb__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='machinetalk/protobuf/firmware.proto',
  package='machinetalk',
  syntax='proto2',
  serialized_pb=_b('\n#machinetalk/protobuf/firmware.proto\x12\x0bmachinetalk\x1a!machinetalk/protobuf/nanopb.proto\"6\n\tConnector\x12\x13\n\x04name\x18\x01 \x01(\tB\x05\x92?\x02\x08\x14\x12\x0c\n\x04pins\x18\x02 \x01(\x0f:\x06\x92?\x03H\xfc\x02\"\xc4\x01\n\x08\x46irmware\x12\x18\n\tbuild_sha\x18\x01 \x01(\tB\x05\x92?\x02\x08(\x12\x1f\n\x10\x66pga_part_number\x18\x02 \x01(\tB\x05\x92?\x02\x08\x14\x12\x30\n\tconnector\x18\x03 \x03(\x0b\x32\x16.machinetalk.ConnectorB\x05\x92?\x02\x10\x10\x12\x10\n\x08num_leds\x18\x04 \x01(\x0f\x12\x19\n\nboard_name\x18\x05 \x01(\tB\x05\x92?\x02\x08\x1e\x12\x16\n\x07\x63omment\x18\x06 \x01(\tB\x05\x92?\x02\x08P:\x06\x92?\x03H\x81\x03')
  ,
  dependencies=[machinetalk_dot_protobuf_dot_nanopb__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_CONNECTOR = _descriptor.Descriptor(
  name='Connector',
  full_name='machinetalk.Connector',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='machinetalk.Connector.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222?\002\010\024'))),
    _descriptor.FieldDescriptor(
      name='pins', full_name='machinetalk.Connector.pins', index=1,
      number=2, type=15, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\222?\003H\374\002')),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=87,
  serialized_end=141,
)


_FIRMWARE = _descriptor.Descriptor(
  name='Firmware',
  full_name='machinetalk.Firmware',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='build_sha', full_name='machinetalk.Firmware.build_sha', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222?\002\010('))),
    _descriptor.FieldDescriptor(
      name='fpga_part_number', full_name='machinetalk.Firmware.fpga_part_number', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222?\002\010\024'))),
    _descriptor.FieldDescriptor(
      name='connector', full_name='machinetalk.Firmware.connector', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222?\002\020\020'))),
    _descriptor.FieldDescriptor(
      name='num_leds', full_name='machinetalk.Firmware.num_leds', index=3,
      number=4, type=15, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='board_name', full_name='machinetalk.Firmware.board_name', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222?\002\010\036'))),
    _descriptor.FieldDescriptor(
      name='comment', full_name='machinetalk.Firmware.comment', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222?\002\010P'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\222?\003H\201\003')),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=144,
  serialized_end=340,
)

_FIRMWARE.fields_by_name['connector'].message_type = _CONNECTOR
DESCRIPTOR.message_types_by_name['Connector'] = _CONNECTOR
DESCRIPTOR.message_types_by_name['Firmware'] = _FIRMWARE

Connector = _reflection.GeneratedProtocolMessageType('Connector', (_message.Message,), dict(
  DESCRIPTOR = _CONNECTOR,
  __module__ = 'machinetalk.protobuf.firmware_pb2'
  # @@protoc_insertion_point(class_scope:machinetalk.Connector)
  ))
_sym_db.RegisterMessage(Connector)

Firmware = _reflection.GeneratedProtocolMessageType('Firmware', (_message.Message,), dict(
  DESCRIPTOR = _FIRMWARE,
  __module__ = 'machinetalk.protobuf.firmware_pb2'
  # @@protoc_insertion_point(class_scope:machinetalk.Firmware)
  ))
_sym_db.RegisterMessage(Firmware)


_CONNECTOR.fields_by_name['name'].has_options = True
_CONNECTOR.fields_by_name['name']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222?\002\010\024'))
_CONNECTOR.has_options = True
_CONNECTOR._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\222?\003H\374\002'))
_FIRMWARE.fields_by_name['build_sha'].has_options = True
_FIRMWARE.fields_by_name['build_sha']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222?\002\010('))
_FIRMWARE.fields_by_name['fpga_part_number'].has_options = True
_FIRMWARE.fields_by_name['fpga_part_number']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222?\002\010\024'))
_FIRMWARE.fields_by_name['connector'].has_options = True
_FIRMWARE.fields_by_name['connector']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222?\002\020\020'))
_FIRMWARE.fields_by_name['board_name'].has_options = True
_FIRMWARE.fields_by_name['board_name']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222?\002\010\036'))
_FIRMWARE.fields_by_name['comment'].has_options = True
_FIRMWARE.fields_by_name['comment']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222?\002\010P'))
_FIRMWARE.has_options = True
_FIRMWARE._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\222?\003H\201\003'))
# @@protoc_insertion_point(module_scope)
