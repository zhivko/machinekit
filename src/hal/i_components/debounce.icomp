component debounce "Debounce filter for Machinekit HAL";

description
"""
The debounce filter works by incrementing a counter whenever the input is true,
and decrementing the counter when it is false.  

If the counter decrements to zero, the output is set false and the counter ignores further decrements.  

Ifthe counter increments up to a threshold, the output is set true and the
counter ignores further increments.  

If the counter is between zero and the threshold, the output retains its previous state.  

The threshold determines the amount of filtering: a threshold of 1 does no filtering at all, and a threshold
of N requires a signal to be present for N samples before the output changes state.

The default value for the counter is 5, the exact period that equates to, is dependent upon 
the speed of the thread it is attached to
""";
    // Input Pins
pin in bit #.in[pincount];
pin out bit #.out[pincount];
pin io s32 #.state[pincount];

pin io s32 delay = 5;

instanceparam int pincount = 8;

option MAXCOUNT 16;

license "GPL";

author "John Kasunich, adapted by ArcEye";

function _;
;;


FUNCTION(_)
{
hal_s32_t n;

    // first make sure delay is sane
    if (delay < 0)
        delay = 1;

    // loop through filters
    for (n = 0; n < localpincount; n++)
        {
        if(_in(n))
            {
            /* input true, is state at threshold? */
            if (_state(n) < delay)
                _state(n)++;
            else
                _out(n) = true;
            }
        else
            {
            if (_state(n) > 0)
                _state(n)--;
            else
                _out(n) = false;
            }
        }
    return 0;
}
