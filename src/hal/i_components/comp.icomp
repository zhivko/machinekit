component comp "Two input comparator with hysteresis";
pin in float in0 "Inverting input to the comparator";
pin in float in1 "Non-inverting input to the comparator";
pin out bit out "Normal output. True when *in1* > *in0* (see parameter *hyst* for details)";
pin out bit equal "Match output.  True when difference between *in1* and *in0* is less than *hyst*2";
pin in float hyst=0.0 
"""
Hysteresis of the comparator (default 0.0)

With zero hysteresis, the output is true when *in1* > *in0*.  With nonzero
hysteresis, the output switches on and off at two different values,
separated by distance *hyst* around the point where *in1* = *in0*.
Keep in mind that floating point calculations are never absolute
and it is wise to always set *hyst* if you intend to use equal 
""";

function _ fp "Update the comparator";
license "GPL";
;;
FUNCTION(_)
{
    hal_float_t tmp = in1 - in0;
    hal_float_t halfhyst = 0.5 * hyst;

    if(tmp < -halfhyst)
        {
	out = false;
	    equal = false;
        }
    else if(tmp > halfhyst)
        {
	out = true;
	    equal = false;
        }
    else
        {
	equal = true;
        }

	return 0;
}
